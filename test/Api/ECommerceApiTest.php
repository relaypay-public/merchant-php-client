<?php
/**
 * ECommerceApiTest
 * PHP version 5
 *
 * @category Class
 * @package  RelayPay
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * RelayPay-Api-Spec
 *
 * Relay Pay API documentation. Use `api.sandbox.relaypay.io` for Sandbox environment and `api.relaypay.io` for production.  Some useful links: - [Official docs](https://relaypay-merchant.readme.io/reference/merchant-native-integration)
 *
 * OpenAPI spec version: 0.0.2
 * Contact: support@relaypay.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.26
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace RelayPay;

use RelayPay\Configuration;
use RelayPay\ApiException;
use RelayPay\ObjectSerializer;

/**
 * ECommerceApiTest Class Doc Comment
 *
 * @category Class
 * @package  RelayPay
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ECommerceApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for getMerchantTransaction
     *
     * Get merchant transaction for a given merchantId by a specified orderId.
     *
     */
    public function testGetMerchantTransaction()
    {
    }

    /**
     * Test case for getMerchantTxs
     *
     * Get all bill payment transactions for the merchant.
     *
     */
    public function testGetMerchantTxs()
    {
    }

    /**
     * Test case for setEcommerceRequest
     *
     * Ecommerce provider pushes a transaction request. The service returns a unique url to be used for redirection..
     *
     */
    public function testSetEcommerceRequest()
    {
    }

    /**
     * Test case for setEcommerceSalesforce
     *
     * Ecommerce provider pushes a Salesforce specific data for authorisation..
     *
     */
    public function testSetEcommerceSalesforce()
    {
    }
}
